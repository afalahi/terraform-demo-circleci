# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  terraform: circleci/terraform@3.2.0
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# run this
jobs:
  ermetic-scan:
    docker:
      - image: ghcr.io/ermetic/scanner:latest
        environment:
          # CircleCi doesn't seem to have support for building pull requests without additional setup
          # this will be outside the scope of this sample
          ERMETIC_PIPELINE_RUN_TRIGGER: push
    steps:
      - run:
          # This isn't essential, but CircleCi throws a warrning and falls back to the built-in git
          # installing git and open-ssh resolves that issue
          name: 'Install Git'
          command: apk add --update openssh-client git
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - checkout
      - run:
          name: 'Ermetic Scanner'
          # We need to define the env variables in shell because CircleCi can't interpolate variables referencing other variables
          # ** Note **: We've created project level variables for ERMETIC_API_TOKEN and ERMETIC_API_URL. These will be available to the build by default
          command: |
            export ERMETIC_CODE_BRANCH=${CIRCLE_BRANCH}
            export ERMETIC_CODE_COMMIT_HASH=${CIRCLE_SHA1}
            export ERMETIC_CODE_COMMIT_USER=${CIRCLE_USERNAME}
            export ERMETIC_PIPELINE_RUN_ID=<< pipeline.id >>
            # export ERMETIC_PIPELINE_RUN_ID=${CIRCLE_BUILD_NUM}
            # commenting for trigger
            export ERMETIC_PIPELINE_RUN_URL=${CIRCLE_BUILD_URL}
            export ERMETIC_CODE_REPOSITORY_URL=${CIRCLE_REPOSITORY_URL}
            ermetic iac scan

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  scan-terraform-workflow:
    jobs:
      - terraform/fmt:
          checkout: true
          context: terraform
      - terraform/validate:
          checkout: true
          context: terraform
          requires:
            - terraform/fmt
      # - terraform/plan:
      #     checkout: true
      #     context: terraform
      #     persist-workspace: true
      #     requires:
      #       - terraform/validate
      - ermetic-scan:
          requires:
            - terraform/validate
